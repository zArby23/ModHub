@page "/forums/edit/{Id:int}"

@using CurrieTechnologies.Razor.SweetAlert2
@using ModHub.Shared.Entities

@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService swal

<h1>Actualizar datos</h1>

@if(forum is null)
{
    <div class="spinner"/>
    <p>Cargando...</p>
}
else
{
    <ForumsForm @ref="forumForm" Forum="forum" OnValidSubmit="Edit" ReturnAction="Return"/>
}

@code {
    private Forum forum;
    private ForumsForm forumForm;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var responseHttp = await repository.GetAsync<Forum>($"/api/forums/{Id}");
        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/forums");
                return;
            }
            else
            {
                var message = await responseHttp.GetErrorMessage();
                await swal.FireAsync("Error", message, SweetAlertIcon.Error);
            }
        }
        else
        {
            forum = responseHttp.Response;
        }
    }

    private async Task Edit()
    {
        var responseHttp = await repository.PutAsync($"/api/forums", forum);
        if (responseHttp.Error)
        {
            var errorMessage = await responseHttp.GetErrorMessage();
            await swal.FireAsync("Error", errorMessage, SweetAlertIcon.Error);
        }
        else
        {
            forumForm!.FormPostedSuccessfully = true;
            navigationManager.NavigateTo("/forums");
        }
    }

    private void Return()
    {
        navigationManager.NavigateTo("/forums");
    }
}
