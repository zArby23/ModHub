@using CurrieTechnologies.Razor.SweetAlert2
@using ModHub.Shared.Entities

@inject NavigationManager navigationManager
@inject SweetAlertService swal

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation"></NavigationLock>
<EditForm EditContext="editContext" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <div class="mb-3">
            <label>Nombre</label>
            <div>
                <InputText width="10" @bind-Value="@Game.FullName" />
                <ValidationMessage For="@(() => Game.FullName)" />
            </div>
            <label>Correo Electrónico</label>
            <div>
                <InputText width="10" @bind-Value="@Game.Description" />
                <ValidationMessage For="@(() => Game.Description)" />
            </div>
            <button class="btn btn-primary" type="submit">Guardar</button>
            <button class="btn btn-success" @onclick="ReturnAction">Regresar</button>
        </div>
    </div>
</EditForm>

@code {
    private EditContext editContext = null!;
    protected override void OnInitialized()
    {
        editContext = new(Game);
    }

    [EditorRequired]
    [Parameter]
    public Game Game { get; set; }

    [EditorRequired]
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }

    public bool FormPostedSuccessfully { get; set; } = false;

    private async Task OnBeforeInternalNavigation(LocationChangingContext context)
    {
        var formWasEdited = editContext.IsModified();

        if (!formWasEdited)
        {
            return;
        }

        if (FormPostedSuccessfully)
        {
            return;
        }

        var result = await swal.FireAsync(new SweetAlertOptions
        {
            Title = "¿Quieres salir?",
            Text = "Tienes cambios sin guardar.",
            Icon = SweetAlertIcon.Warning,
            ShowCancelButton = true,
            ConfirmButtonText = "Sí",
            CancelButtonText = "No",
            ReverseButtons = true
        });

        var confirmation = !string.IsNullOrEmpty(result.Value);
        if (confirmation)
        {
            return;
        }
        context.PreventNavigation();
    }
}
